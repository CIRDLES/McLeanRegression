/*
 * Copyright 2006-2016 CIRDLES.org.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.cirdles.mcLeanRegression.userInterface;

import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import org.cirdles.mcLeanRegression.McLeanRegression;
import org.cirdles.mcLeanRegression.core.McLeanRegressionReportsEngine;
import org.cirdles.mcLeanRegression.utilities.CsvFileFilter;
import org.cirdles.mcLeanRegression.utilities.DataFileHandler;

/**
 *
 * @author James F. Bowring
 */
public class McLeanRegressionUI extends javax.swing.JFrame {

    private final transient DataFileHandler dataFileHandler;

    /**
     * Creates new form McLeanRegressionUI
     * @param dataFileHandler
     */
    public McLeanRegressionUI(DataFileHandler dataFileHandler) {
        this.dataFileHandler = dataFileHandler;

        initComponents();
        initUI();
    }

    private void initUI() {

        this.setPreferredSize(new Dimension(700, 475));
        McLeanRegressionUI.setDefaultLookAndFeelDecorated(true);
        UIManager.getLookAndFeelDefaults().put("defaultFont", new Font("SansSerif", Font.PLAIN, 12));

        // center me
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();

        int w = this.getSize().width;
        int h = this.getSize().height;
        int x = (dim.width - w) / 2;
        int y = (dim.height - h) / 2;

        this.setLocation(x, y);

        this.setTitle("McLeanRegression data processing");
        mcLeanRegressionInfo.setText("McLeanRegression version " + McLeanRegression.VERSION + "   built on " + McLeanRegression.RELEASE_DATE);
        updateCurrentDataFileLocation();
        updateReportsFolderLocationText();

        fileMenu.setVisible(false);

    }

    private void updateCurrentDataFileLocation() {
        currentDataFileLocation.setText(dataFileHandler.getCurrentDataFileLocation());
    }

    private void updateReportsFolderLocationText() {
        try {
            this.outputFolderLocation.setText(dataFileHandler.getReportsEngine().getFolderToWriteMcLeanRegressionReports().getCanonicalPath());
        } catch (IOException iOException) {
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        normalizeIonCounts = new javax.swing.ButtonGroup();
        selectRatioCalculationMethod = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        basePane = new javax.swing.JLayeredPane();
        inputFileLocationLabel = new javax.swing.JLabel();
        outputFileLocationLabel = new javax.swing.JLabel();
        reduceDataButton = new javax.swing.JButton();
        selectReportsLocationButton = new javax.swing.JButton();
        outputFolderLocation = new javax.swing.JLabel();
        selectDataFileLocationButton = new javax.swing.JButton();
        currentDataFileLocation = new javax.swing.JLabel();
        mcLeanRegressionInfo = new javax.swing.JLabel();
        reduceDataProgressBar = new javax.swing.JProgressBar();
        selectUnctTypeLabel = new javax.swing.JLabel();
        normalizeIonCountsYes = new javax.swing.JRadioButton();
        normalizeIonCountsNo = new javax.swing.JRadioButton();
        readMeButton = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        calamariMenu = new javax.swing.JMenu();
        documentationMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();
        exitTwoMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setSize(new java.awt.Dimension(700, 475));

        basePane.setBackground(new java.awt.Color(211, 231, 229));
        basePane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        basePane.setOpaque(true);
        basePane.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        inputFileLocationLabel.setBackground(new java.awt.Color(211, 231, 229));
        inputFileLocationLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        inputFileLocationLabel.setText("Selected '.csv' data file path:");
        inputFileLocationLabel.setOpaque(true);
        basePane.add(inputFileLocationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 250, 20));

        outputFileLocationLabel.setBackground(new java.awt.Color(211, 231, 229));
        outputFileLocationLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        outputFileLocationLabel.setText("Selected McLeanRegressionReports folder location:");
        outputFileLocationLabel.setOpaque(true);
        basePane.add(outputFileLocationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 440, 20));

        reduceDataButton.setBackground(new java.awt.Color(255, 255, 255));
        reduceDataButton.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        reduceDataButton.setText("Fit Line to Data and Produce Graphs and Reports");
        reduceDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reduceDataButtonActionPerformed(evt);
            }
        });
        basePane.add(reduceDataButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 375, 390, 25));

        selectReportsLocationButton.setBackground(new java.awt.Color(255, 255, 255));
        selectReportsLocationButton.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        selectReportsLocationButton.setText("Select location for McLeanRegressionReports Folder");
        selectReportsLocationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectReportsLocationButtonActionPerformed(evt);
            }
        });
        basePane.add(selectReportsLocationButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 143, 420, 25));

        outputFolderLocation.setBackground(new java.awt.Color(255, 255, 255));
        outputFolderLocation.setText("path");
        outputFolderLocation.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        outputFolderLocation.setOpaque(true);
        basePane.add(outputFolderLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 192, 630, -1));

        selectDataFileLocationButton.setBackground(new java.awt.Color(255, 255, 255));
        selectDataFileLocationButton.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        selectDataFileLocationButton.setText("Select '.csv' data file");
        selectDataFileLocationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectDataFileLocationButtonActionPerformed(evt);
            }
        });
        basePane.add(selectDataFileLocationButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 63, 220, 25));

        currentDataFileLocation.setBackground(new java.awt.Color(255, 255, 255));
        currentDataFileLocation.setText("path");
        currentDataFileLocation.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        currentDataFileLocation.setOpaque(true);
        basePane.add(currentDataFileLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 112, 630, -1));

        mcLeanRegressionInfo.setBackground(new java.awt.Color(0, 204, 204));
        mcLeanRegressionInfo.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        mcLeanRegressionInfo.setForeground(new java.awt.Color(255, 255, 255));
        mcLeanRegressionInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mcLeanRegressionInfo.setText("jLabel1");
        mcLeanRegressionInfo.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        mcLeanRegressionInfo.setOpaque(true);
        basePane.add(mcLeanRegressionInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, -1));

        reduceDataProgressBar.setBackground(new java.awt.Color(211, 231, 229));
        reduceDataProgressBar.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        reduceDataProgressBar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        reduceDataProgressBar.setOpaque(true);
        reduceDataProgressBar.setStringPainted(true);
        basePane.add(reduceDataProgressBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(475, 375, 170, 25));

        selectUnctTypeLabel.setBackground(new java.awt.Color(211, 231, 229));
        selectUnctTypeLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        selectUnctTypeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        selectUnctTypeLabel.setText("Select Uncertainty Type in data file:");
        selectUnctTypeLabel.setOpaque(true);
        basePane.add(selectUnctTypeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 225, 290, 30));

        normalizeIonCountsYes.setBackground(new java.awt.Color(211, 231, 229));
        normalizeIonCounts.add(normalizeIonCountsYes);
        normalizeIonCountsYes.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        normalizeIonCountsYes.setSelected(true);
        normalizeIonCountsYes.setText("ABS");
        normalizeIonCountsYes.setOpaque(true);
        normalizeIonCountsYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normalizeIonCountsYesActionPerformed(evt);
            }
        });
        basePane.add(normalizeIonCountsYes, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 215, -1, -1));

        normalizeIonCountsNo.setBackground(new java.awt.Color(211, 231, 229));
        normalizeIonCounts.add(normalizeIonCountsNo);
        normalizeIonCountsNo.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        normalizeIonCountsNo.setText("PCT");
        normalizeIonCountsNo.setEnabled(false);
        normalizeIonCountsNo.setOpaque(true);
        normalizeIonCountsNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normalizeIonCountsNoActionPerformed(evt);
            }
        });
        basePane.add(normalizeIonCountsNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 238, -1, -1));

        readMeButton.setBackground(new java.awt.Color(255, 255, 255));
        readMeButton.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        readMeButton.setForeground(new java.awt.Color(0, 153, 153));
        readMeButton.setText("Please click here for Information about McLean Regression");
        readMeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readMeButtonActionPerformed(evt);
            }
        });
        basePane.add(readMeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 520, 25));

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.setDisplayedMnemonicIndex(5);
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        calamariMenu.setMnemonic('h');
        calamariMenu.setText("McLean Regression");

        documentationMenuItem.setText("Documentation");
        documentationMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                documentationMenuItemActionPerformed(evt);
            }
        });
        calamariMenu.add(documentationMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        calamariMenu.add(aboutMenuItem);

        exitTwoMenuItem.setText("Exit");
        exitTwoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitTwoMenuItemActionPerformed(evt);
            }
        });
        calamariMenu.add(exitTwoMenuItem);

        menuBar.add(calamariMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(basePane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(basePane, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void reduceDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reduceDataButtonActionPerformed
        if (dataFileHandler.currentDataFileLocationIsFile()) {
            dataFileHandler.initReportsEngineWithCurrentPrawnFileName();
            new ReduceDataWorker(
                    dataFileHandler,
                    reduceDataProgressBar).execute();
        } else {
            JOptionPane.showMessageDialog(
                    this,
                    "Please specify a '.csv' data file for processing.",
                    "McLean Regression Warning",
                    JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_reduceDataButtonActionPerformed

    private void selectReportsLocationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectReportsLocationButtonActionPerformed
        McLeanRegressionReportsEngine reportsEngine = dataFileHandler.getReportsEngine();
        File reportFolder
                = FileHelper.allPlatformGetFolder("Select location to write reports",
                        reportsEngine.getFolderToWriteMcLeanRegressionReports());
        if (reportFolder != null) {
            reportsEngine.setFolderToWriteMcLeanRegressionReports(reportFolder);
            updateReportsFolderLocationText();
        }
    }//GEN-LAST:event_selectReportsLocationButtonActionPerformed

    private void selectDataFileLocationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectDataFileLocationButtonActionPerformed

        File csvDataFile = FileHelper.allPlatformGetFile(//
                "Select CSV data file", //
                new File(dataFileHandler.getCurrentDataFileLocation()), //
                "*.csv", new CsvFileFilter(), false, this)[0];
        if (csvDataFile != null) {
            try {
                dataFileHandler.setCurrentDataFileLocation(csvDataFile.getCanonicalPath());
                updateCurrentDataFileLocation();
            } catch (IOException iOException) {
            }
        }

    }//GEN-LAST:event_selectDataFileLocationButtonActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        AboutBox.getInstance().setVisible(true);
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void documentationMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_documentationMenuItemActionPerformed
        BrowserControl.showURI("https://github.com/CIRDLES/McLeanRegression/wiki");
    }//GEN-LAST:event_documentationMenuItemActionPerformed

    private void normalizeIonCountsYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normalizeIonCountsYesActionPerformed
//        normalizeIonCountsToSBM = ((AbstractButton) evt.getSource()).isSelected();
    }//GEN-LAST:event_normalizeIonCountsYesActionPerformed

    private void normalizeIonCountsNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normalizeIonCountsNoActionPerformed
//        normalizeIonCountsToSBM = !((AbstractButton) evt.getSource()).isSelected();
    }//GEN-LAST:event_normalizeIonCountsNoActionPerformed

    private void readMeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readMeButtonActionPerformed
        BrowserControl.showURI("https://github.com/CIRDLES/McLeanRegression/blob/master/README.md");
    }//GEN-LAST:event_readMeButtonActionPerformed

    private void exitTwoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitTwoMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitTwoMenuItemActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JLayeredPane basePane;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JMenu calamariMenu;
    private javax.swing.JLabel currentDataFileLocation;
    private javax.swing.JMenuItem documentationMenuItem;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenuItem exitTwoMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel inputFileLocationLabel;
    private javax.swing.JLabel mcLeanRegressionInfo;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.ButtonGroup normalizeIonCounts;
    private javax.swing.JRadioButton normalizeIonCountsNo;
    private javax.swing.JRadioButton normalizeIonCountsYes;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JLabel outputFileLocationLabel;
    private javax.swing.JLabel outputFolderLocation;
    private javax.swing.JButton readMeButton;
    private javax.swing.JButton reduceDataButton;
    private javax.swing.JProgressBar reduceDataProgressBar;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JButton selectDataFileLocationButton;
    private javax.swing.ButtonGroup selectRatioCalculationMethod;
    private javax.swing.JButton selectReportsLocationButton;
    private javax.swing.JLabel selectUnctTypeLabel;
    // End of variables declaration//GEN-END:variables

}
